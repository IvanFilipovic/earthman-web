{"file":"index-Bwar7PO4.js","mappings":"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","names":["_ssrRenderAttrs","_mergeProps","_ssrRenderList","_ssrRenderAttr","_ssrInterpolate","_ssrRenderComponent","AppNavigation","_ssrRenderClass"],"sources":["../../../../components/ShopListingskeleton.vue","../../../../components/ShopListing.vue","../../../../pages/shop/index.vue"],"sourcesContent":["<template>\n  <div\n    class=\"grid grid-cols-2 md:grid-cols-4 overflow-y-auto pt-8 gap-x-4 md:gap-x-8 lg:gap-x-24\"\n  >\n    <div\n      v-for=\"i in count\"\n      :key=\"i\"\n      class=\"col-span-1 pb-10 animate-pulse\"\n    >\n      <!-- Image placeholder -->\n      <div class=\"overflow-hidden\">\n        <div\n          class=\"w-full border\"\n          :style=\"skeletonStyle\"\n        >\n          <!-- keep a consistent image ratio -->\n          <div class=\"w-full h-[275.73] md:h-[407.35px] lg:h-[568.723px] aspect-[3/4]\" :style=\"skeletonStyle\"></div>\n        </div>\n      </div>\n\n      <!-- Text block -->\n      <div class=\"py-3\">\n        <!-- Category -->\n        <div class=\"h-3 w-24\" :style=\"skeletonStyle\"></div>\n\n        <!-- Title -->\n        <div class=\"mt-2 h-4 w-3/4\" :style=\"skeletonStyle\"></div>\n\n        <!-- Color chips -->\n        <div class=\"mt-3 flex items-center gap-2\">\n          <div class=\"w-7 h-7 md:w-8 md:h-8 rounded\" :style=\"skeletonStyle\"></div>\n          <div class=\"w-7 h-7 md:w-8 md:h-8 rounded\" :style=\"skeletonStyle\"></div>\n        </div>\n\n        <!-- Price -->\n        <div class=\"mt-3 h-4 w-16\" :style=\"skeletonStyle\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nconst props = withDefaults(defineProps<{\n  count?: number\n  animate?: boolean\n}>(), {\n  count: 12,\n  animate: true,\n})\n\n// single source of truth for the skeleton color\nconst skeletonStyle = {\n  backgroundColor: '#c6c5c5',\n  borderColor: '#c6c5c5',\n}\n</script>\n","<template>\n  <div class=\"grid grid-cols-2 md:grid-cols-4 overflow-y-auto pt-8 gap-x-4 md:gap-x-8 lg:gap-x-24\">\n    <div\n      v-for=\"item in products\"\n      :key=\"item.slug\"\n      class=\"col-span-1 cursor-pointer pb-10\"\n    >\n      <div class=\"bg-background_color overflow-hidden object-fill\">\n        <div class=\"w-full\">\n          <div\n            class=\"relative bg-background_color\"\n            @mouseenter=\"hoveredSlug = item.slug\"\n            @mouseleave=\"hoveredSlug = null\"\n          >\n            <img\n              @click=\"goToProduct(item.slug, item.colors?.[0]?.variant_slug)\"\n              :src=\"item.currentImage || item.link_image\"\n              :alt=\"item.alt_text || item.name\"\n              class=\"hidden md:block max-w-[100%] h-auto object-cover transition-opacity duration-200 border border-text_color/30\"\n              loading=\"lazy\"\n            />\n            <MobileColorSlider\n              :colors=\"limitedColors(item.colors)\"\n              @go=\"(variantSlug) => goToProduct(item.slug, variantSlug)\"\n            />\n            <button\n              v-show=\"hoveredSlug === item.slug\"\n              class=\"absolute top-4 left-4\n                    bg-text_color text-background_color tracking-wider text-xs font-light \n                    w-auto px-2 mx-auto \n                    opacity-0 transition-opacity duration-200\"\n              :class=\"{ 'opacity-100': hoveredSlug === item.slug }\"\n              @click=\"goToProduct(item.slug, item.colors?.[0]?.variant_slug)\"\n            >\n              VIEW\n            </button>\n          </div>\n\n          <!-- TEXT BLOCK -->\n          <div class=\"py-3 text-left\">\n            <p class=\"text-xs tracking-wider font-extralight\">{{ item.category }}</p>\n\n            <h3 class=\"uppercase tracking-wider text-[13px] md:text-sm font-normal truncate py-1\">{{ item.name }}</h3>\n\n            <div class=\"mt-1 flex items-center gap-2\">\n              <div\n                v-for=\"color in limitedColors(item.colors)\"\n                :key=\"color.variant_slug\"\n                class=\"relative group\"\n                @mouseenter=\"onEnterColor(item, color)\"\n                @mouseleave=\"onLeaveColor(item)\"\n              >\n                <img\n                  @mouseenter=\"hoveredSlug = item.slug\"\n                  @mouseleave=\"hoveredSlug = null\"\n                  :src=\"color.avatar_image\"\n                  :alt=\"color.color\"\n                  class=\"w-7 h-7 md:h-8 md:w-8 object-cover\"\n                  loading=\"lazy\"\n                  @click=\"goToProduct(item.slug, color.variant_slug)\"\n                />\n\n                <!-- overlay icon; doesn't block mouse so leave works -->\n                <div class=\"absolute inset-0 pointer-events-none transition-opacity duration-200 w-8 h-8 bg-text_color\" :class=\"isColorHovered(item, color) ? 'opacity-100' : 'opacity-0'\" >\n                  <Icon\n                    name=\"lucide:square-arrow-out-up-right\"\n                    class=\"absolute inset-0 w-4 h-4 z-10 text-background_color m-auto\"\n                    \n                  />\n                </div>\n                \n              </div>\n              <span v-if=\"extraColorsCount(item.colors) > 0\" class=\"text-[10px] md:text-xs\">+{{ extraColorsCount(item.colors) }}</span>\n            </div>\n\n            <p class=\"mt-1 text-xs font-light\">â‚¬{{ parseFloat(item.price).toFixed(2) }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\"\nimport { useRouter } from \"vue-router\"\n\ndefineProps({ products: { type: Array, default: () => [] } })\n\nconst hoveredSlug = ref(null)\nconst router = useRouter()\nconst hoveredColorBySlug = ref({})\n\nfunction isColorHovered(item, color) {\n  return hoveredColorBySlug.value[item.slug] === color.variant_slug\n}\n\nfunction onEnterColor(item, color) {\n  item.currentImage = color.avatar_image\n  hoveredColorBySlug.value[item.slug] = color.variant_slug\n}\n\nfunction onLeaveColor(item) {\n  item.currentImage = item.defaultImage || item.link_image\n  hoveredColorBySlug.value[item.slug] = null\n}\nfunction extraColorsCount(colors = []) {\n  return Math.max(0, colors.length - 2)\n}\nfunction limitedColors(colors = []) {\n  return colors.slice(0, 2)\n}\nfunction goToProduct(slug, variant_slug) {\n  if (!slug || !variant_slug) return\n  router.push(`/product/${slug}/${variant_slug}`)\n}\n</script>\n","<template>\n  <section>\n    <AppNavigation :dark=\"false\" />\n    <div class=\"flex flex-col md:flex-row items-start md:items-center justify-between px-4 md:px-8 pt-4 gap-6\">\n      <div class=\"flex justify-between w-full\">\n        <div class=\"flex gap-3 justify-end w-full\">\n            <div class=\"flex items-center gap-3\">\n                <span class=\"uppercase text-xs tracking-widest ml-4\">Page</span>\n                <button\n                    v-for=\"p in totalPages\"\n                    :key=\"p\"\n                    :class=\"p === page ? 'underline' : 'opacity-60'\"\n                    class=\"text-sm uppercase tracking-widest\"\n                    @click=\"page = p\"\n                >{{ p }}</button>\n\n                <button class=\"text-md uppercase tracking-widest\" @click=\"filterOpen = true\">Filters</button>\n            </div>\n        </div>\n        \n      </div>\n    </div>\n    <ShopListingskeleton v-if=\"loading\" class=\"mt-2 md:mt-6 px-4 md:px-8\" :count=\"8\" />\n    <ShopListing v-else class=\"mt-2 md:mt-6 px-4 md:px-8\" :products=\"products\" />\n\n    <ClientOnly>\n      <FilterPanel\n        :open=\"filterOpen\"\n        v-model=\"filters\"\n        :facets=\"facets\"\n        @update:open=\"filterOpen = $event\"\n        \n      />\n    </ClientOnly>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch, onMounted } from 'vue'\nimport AppNavigation from '~/components/AppNavigation.vue'\n\nconst config = useRuntimeConfig()\nconst loading = ref(true)\nconst route = useRoute()\n\n\n/* --------------------------\n   Page + Filters + Data\n-------------------------- */\ninterface Product {\n  id?: number\n  name?: string\n  link_image?: string\n  defaultImage?: string\n  currentImage?: string\n  [key: string]: any\n}\nconst products = ref<Product[]>([])\nconst count = ref(0)\nconst page = ref(1)\nconst pageSize = 12\nconst totalPages = computed(() => Math.max(1, Math.ceil(count.value / pageSize)))\nconst filterOpen = ref(false)\nconst filters = ref({ gender: [] as string[], collections: [] as string[], categories: [] as number[], sizes: [] as string[], colors: [] as string[] })\n\nconst facets = ref({\n  collections: [] as { name: string; slug: string }[],\n  categories: [] as { id: number; name: string }[],\n  sizes: [] as { name: string }[],\n  colors: [] as { name: string; image: string }[]\n})\n\nfunction buildQuery() {\n  const p = new URLSearchParams()\n  p.set('page', String(page.value))\n  p.set('page_size', String(pageSize))\n  filters.value.collections.forEach(slug => p.append('collection', slug.toString()))\n  filters.value.categories.forEach(id => p.append('category', id.toString()))\n  filters.value.sizes.forEach(s => p.append('size', s))\n  filters.value.colors.forEach(c => p.append('color', c))\n  const setGender = filters.value.gender[0]\n  if (setGender) p.set('gender', setGender)   \n  return p.toString().replace(/\\+/g, '%20')\n}\n\n/* --------------------------\n   Fetch functions\n-------------------------- */\nasync function fetchCategories () {\n  try {\n    const res = await $fetch(`${config.public.apiBase}/public/categories/`)\n    facets.value.categories = Array.isArray(res) ? res : []\n  } catch {\n    facets.value.categories = []\n  }\n}\nasync function fetchSizes () {\n  try {\n    const res = await $fetch(`${config.public.apiBase}/public/sizes/`)\n    facets.value.sizes = Array.isArray(res) ? res : []\n  } catch {\n    facets.value.sizes = []\n  }\n}\nasync function fetchColors () {\n  try {\n    const res = await $fetch(`${config.public.apiBase}/public/colors/`)\n    facets.value.colors = Array.isArray(res)\n      ? res.map((c: any) => ({ name: c.name, image: c.image }))\n      : []\n  } catch {\n    facets.value.colors = []\n  }\n}\nasync function fetchProducts() {\n  try {\n    loading.value = true\n    const res = await $fetch(`${config.public.apiBase}/public/products-all/?${buildQuery()}`) as { count: number; results: any[] }\n    count.value = res.count\n    products.value = res.results.map(r => ({\n      ...r,\n      defaultImage: r.link_image,\n      currentImage: r.link_image\n    }))\n  } catch {\n    console.warn('Failed to fetch products')\n    loading.value = false\n  }\n  finally {\n    loading.value = false\n  }\n  \n}\nasync function fetchCollections () {\n  try {\n    const res = await $fetch(`${config.public.apiBase}/public/collections/`)\n    facets.value.collections = Array.isArray(res)\n      ? res.map((c: any) => ({ name: c.name, slug: c.slug }))\n      : []\n  } catch {\n    facets.value.collections = []\n  }\n}\n\n/* --------------------------\n   Watchers + Lifecycle\n-------------------------- */\nwatch(filters, () => {\n  if (page.value !== 1) page.value = 1\n}, { deep: true })\nwatch([filters , page, route], fetchProducts)\n\n\nonMounted(async () => {\n  await Promise.all([fetchCategories(), fetchColors(), fetchSizes(), fetchCollections()])\n  await fetchProducts()\n})\n</script>\n\n<style scoped>\n.image {\nbackground-image: url(\"public/logo/black_logo1.png\");\n}\n</style>\n"],"version":3}