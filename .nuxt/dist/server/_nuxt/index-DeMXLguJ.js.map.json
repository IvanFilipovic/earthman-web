{"file":"index-DeMXLguJ.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,UAAM,SAAS,iBAAA;AACf,UAAM,EAAE,MAAM,aAAa,SAAS,UAAU;AAAA,MAC5C,GAAG,OAAO,OAAO,OAAO;AAAA,MAAA;AAAA,IAC1B;AAEA,UAAM,cAAc,IAAI,CAAC;AAUzB,UAAM,eAAe,SAAS,MAAO,YAAY,QAAQ,MAAM,IAAI,CAAE;AAGrE,UAAM,SAAS,SAAS,MAAM;AAC5B,YAAM,MAAM,YAAY,SAAS,CAAA;AACjC,YAAM,MAAM,aAAa;AACzB,YAAM,QAAQ,CAAA;AACd,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK,KAAK;AACxC,cAAM,KAAK,IAAI,MAAM,GAAG,IAAI,GAAG,CAAC;AAAA,MAClC;AACA,aAAO;AAAA,IACT,CAAC;AAEiB,QAAI,CAAA,CAAE;;;AAzEjB,YAAA,OAAAA,eAAAC,WAAA,EAAA,OAAM,mBAAe,MAAA,CAAA,CAAA,WAAA;oBAGO,OAAA,OAAM,CAA3B,OAAO,cAAS;AAIhB,cAAA,eAAAC,eAAA,CAAA,MAAM,SAAM,IAAA,mBAAA,IAAA,0DAAA,CAAA,CAAA,YAAA;AAIHC,sBAAA,QAAR,SAAI;iFAGuBC,eAAA,EAAA,iBAAA,OAAA,KAAK,iBAAiB,IAAA,CAAA,sSAKjDC,eAAA,KAAK,IAAI;;YAEX,IAAE,gBAAkB,mBAAmB,KAAK,IAAI,CAAA;AAAA,YACjD,OAAM;AAAA,UAAA;6BAFR,CAOW,GAAAC,QAAAC,UAAA,aAAA;;;;;kBAFTC,YAA2C,QAAA,EAArC,OAAM,YAAA,GAAY,cAAY;AAAA,kBACpCA,YAAsD,QAAA;AAAA,oBAAhD,OAAM;AAAA,oBAAgB,eAAY;AAAA,kBAAA;;;;;;;;;;;UAOrCC,MAAA,OAAA,GAAO;;;;;UAGPA,MAAA,KAAA,GAAK;;;;;;;;;;;;;;;;;;;ACnBJ,QAAwB,IAAI;AAC1B,QAAI,CAAC;AACvB,UAAM,YAAY,IAAI,CAAC;;;;AAnBZ,YAAA,WAAAT,eAAAC,WAAA,EAAA,OAAM,cAAU,MAAA,CAAA,CAAA,yDAAA;AAGL,YAAAS,mBAAA,0BAAA,EAAA,MAAM,SAAK,MAAA,OAAA,CAAA;wHAMSD,MAAA,SAAA,CAAS,MAAA,CAAA,CAAA,oBAAA;;;;;;;;;;;;;","names":["_ssrRenderAttrs","_mergeProps","_ssrRenderClass","_ssrRenderList","_ssrRenderStyle","_ssrInterpolate","_push","_parent","_createVNode","_unref","_ssrRenderComponent"],"sources":["../../../../components/CollectionHome.vue","../../../../pages/collections/index.vue"],"sourcesContent":["<template>\n  <div class=\"bg-text_color\">\n    <!-- Pages: either one or two items, full viewport height -->\n    <div\n      v-for=\"(group, pageIndex) in groups\"\n      :key=\"pageIndex\"\n      :ref=\"el => (groupRefs[pageIndex] = el)\"\n      class=\"relative grid grid-cols-1 min-h-screen w-full gap-1 mb-1\"\n      :class=\"group.length > 1 ? 'md:grid-cols-2' : ''\"\n    >\n      <!-- Tile(s) -->\n      <div\n        v-for=\"item in group\"\n        :key=\"item.id\"\n        class=\"relative h-full w-full bg-cover bg-center\"\n        :style=\"{ backgroundImage: `url(${item.element_one_image})` }\"\n      >\n      <div class=\"absolute inset-0 bg-black bg-opacity-25\"></div>\n        <div class=\"absolute bottom-24 left-1/2 transform -translate-x-1/2 text-center text-background_color px-4\">\n          <h2 class=\"text-base sm:text-lg md:text-2xl font-medium md:font-bold mb-4 bg-text_color/70 uppercase tracking-wider py-1\n          \">{{ item.name }}</h2>\n          <NuxtLink\n            :to=\"`/collections/${encodeURIComponent(item.slug)}`\"\n            class=\"primary-btn sweep group inline-flex items-center justify-center px-8 \n             py-2\"\n          >\n            <span class=\"btn-label\">View project</span>\n            <span class=\"sweep-overlay\" aria-hidden=\"true\"></span>\n          </NuxtLink>\n        </div>\n      </div>\n    </div>\n\n    <!-- Loading & Error -->\n    <div v-if=\"pending\" class=\"fixed inset-0 flex items-center justify-center\">\n      <p class=\"text-xl\">Loading collections…</p>\n    </div>\n    <div v-if=\"error\" class=\"fixed inset-0 flex items-center justify-center\">\n      <p class=\"text-xl text-red-600\">Failed to load collections.</p>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\n\nconst config = useRuntimeConfig()\nconst { data: collections, pending, error } = useFetch(\n  `${config.public.apiBase}/public/collections/`\n)\n\nconst windowWidth = ref(0)\nonMounted(() => {\n  // initialize & listen for resizes\n  windowWidth.value = window.innerWidth\n  const onResize = () => (windowWidth.value = window.innerWidth)\n  window.addEventListener('resize', onResize)\n  onUnmounted(() => window.removeEventListener('resize', onResize))\n})\n\n// decide how many per page: 1 on <768px, else 2\nconst itemsPerPage = computed(() => (windowWidth.value < 768 ? 1 : 2))\n\n// chunk into dynamic groups\nconst groups = computed(() => {\n  const arr = collections.value || []\n  const per = itemsPerPage.value\n  const pages = []\n  for (let i = 0; i < arr.length; i += per) {\n    pages.push(arr.slice(i, i + per))\n  }\n  return pages\n})\n\nconst groupRefs = ref([])\n\nfunction scrollToPage(idx) {\n  const el = groupRefs.value[idx]\n  if (el) el.scrollIntoView({ behavior: 'smooth' })\n}\n</script>\n\n<style>\nhtml,\nbody {\n  scroll-behavior: smooth;\n}\n</style>\n","<template>\n  <section class=\"relative\">\n    <!-- Nav in normal flow (scrolls away) -->\n    <div ref=\"navWrap\" class=\"relative\">\n      <AppNavigation :dark=\"false\" />\n    </div>\n\n    <!-- Content that slides over the nav while the nav is visible -->\n    <div\n      class=\"relative z-20 will-change-transform\"\n      :style=\"{ transform: `translateY(${-parallaxY}px)` }\"\n    >\n      <CollectionHome />\n    </div>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nconst navWrap = ref<HTMLElement | null>(null)\nconst navHeight = ref(0)\nconst parallaxY = ref(0)\n\n// Tweak this for stronger/weaker effect (0.5–0.9 feels nice)\nconst PARALLAX_FACTOR = 0.6\n\nfunction measureNav() {\n  navHeight.value = navWrap.value?.offsetHeight || 0\n}\n\nfunction onScroll() {\n  // Move the content up while the nav is still “coverable”\n  // Stop at nav height so after the nav scrolls away we don’t keep shifting.\n  const y = Math.min(window.scrollY, navHeight.value)\n  parallaxY.value = y * PARALLAX_FACTOR\n}\n\nonMounted(() => {\n  measureNav()\n  window.addEventListener('resize', measureNav)\n  window.addEventListener('scroll', onScroll, { passive: true })\n  onScroll()\n})\n\nonBeforeUnmount(() => {\n  window.removeEventListener('resize', measureNav)\n  window.removeEventListener('scroll', onScroll as any)\n})\n</script>\n\n<style scoped>\n.will-change-transform { will-change: transform; }\n</style>\n"],"version":3}