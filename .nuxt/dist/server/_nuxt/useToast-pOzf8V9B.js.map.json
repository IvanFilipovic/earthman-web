{"file":"useToast-pOzf8V9B.js","mappings":";AASA,MAAM,cAAc,IAAa,EAAE;AACnC,IAAI,MAAM;AAEH,SAAS,WAAW;AACzB,WAAS,OAAO,IAAY;AAC1B,gBAAY,QAAQ,YAAY,MAAM,OAAO,CAAA,MAAK,EAAE,OAAO,EAAE;AAAA,EAC/D;AAEA,WAAS,KAAK,SAAiB,OAAsB,QAAQ,UAAU,MAAM;AAC3E,UAAM,KAAK,EAAE;AACb,gBAAY,MAAM,KAAK,EAAE,IAAI,MAAM,SAAS,SAAS;AAAA,EAMvD;AAEA,WAAS,QAAQ,SAAiB,SAAkB;AAClD,SAAK,SAAS,WAAW,WAAW,IAAI;AAAA,EAC1C;AACA,WAAS,MAAM,SAAiB,SAAkB;AAChD,SAAK,SAAS,SAAS,WAAW,IAAI;AAAA,EACxC;AAEA,SAAO;AAAA,IACL,QAAQ;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;","names":[],"sources":["../../../../composables/useToast.ts"],"sourcesContent":["import { ref } from 'vue'\n\ntype Toast = {\n  id: number\n  type: 'success' | 'error' | 'info'\n  message: string\n  timeout?: number\n}\n\nconst toastsState = ref<Toast[]>([])\nlet _id = 0\n\nexport function useToast() {\n  function remove(id: number) {\n    toastsState.value = toastsState.value.filter(t => t.id !== id)\n  }\n\n  function show(message: string, type: Toast['type'] = 'info', timeout = 2500) {\n    const id = ++_id\n    toastsState.value.push({ id, type, message, timeout })\n\n    // client-only timer\n    if (typeof window !== 'undefined' && timeout > 0) {\n      setTimeout(() => remove(id), timeout)\n    }\n  }\n\n  function success(message: string, timeout?: number) {\n    show(message, 'success', timeout ?? 2500)\n  }\n  function error(message: string, timeout?: number) {\n    show(message, 'error', timeout ?? 3500)\n  }\n\n  return {\n    toasts: toastsState,\n    show,\n    success,\n    error,\n    remove\n  }\n}\n"],"version":3}